@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using MediaCloud.Data.Types
@model MediaCloud.Pages.Medias.CollectionModel

@{
    ViewData["Title"] = "Collection";
}

<div class = "page rounded-3 p-3 text-white">
    <h1>Collection</h1>

    <div class="button-panel d-flex flex-row align-items-center">
           <div>
                <a href="@(Model.ReturnUrl)" class="btn btn-info mt-4">Back to Gallery</a>
            </div>
        </div> 

    <hr />

    <form enctype="multipart/form-data" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for=@(Model.ReturnUrl) class="form-control">
        <input type="hidden" asp-for=@(Model.IsOrderChanged) class="form-control" id="order-changed">
        <input type="hidden" asp-for=@(Model.Collection.Id) class="form-control">
        <div class="row thumbnail-sortable" id="sortable-gallery" style="display: none"> 
        </div>

        <div class="row gallery" id="gallery" style="display: flex"> 
            
        </div>

        <div class="d-flex justify-content-center">
            @if (Model.Collection.Previews.Count() >= Model.ListRequest.Count)
            {
                <div class="spinner-border text-light" role="status" id="loadingSpinner" style="display: block; width:3rem; height:3rem"></div>
            }
        </div>

        <div class="row">
            <div class="form-group mb-3 col-sm h-100">
                <label class="col-form-label">Enter tags with spaces between</label>
                <textarea asp-for="@Model.TagsString" class="form-control"></textarea>
            </div>
            <div class="col-sm">
                <label class="col-form-label" style="visibility: hidden">List of existed tags</label>
                <ul class="list-group">
                    <li class="list-group-item h-100">Related tags: 
                        @foreach(var tag in Model.Tags)
                        {
                            if (tag.Type == TagType.Character)
                            {
                                <a class="btn btn-warning btn-rounded me-1 mb-2" asp-page="/Tags/Detail" asp-route-id=@tag.Id>@tag.Name</a>
                            }
                            else if (tag.Type == TagType.Series)
                            {
                                <a class="btn btn-success btn-rounded me-1 mb-2" asp-page="/Tags/Detail" asp-route-id=@tag.Id>@tag.Name</a>
                            }
                            else if (tag.Type == TagType.Clothes)
                            {
                                <a class="btn btn-danger btn-rounded me-1 mb-2" asp-page="/Tags/Detail" asp-route-id=@tag.Id>@tag.Name</a>
                            }
                            else
                            {
                                <a class="btn btn-info btn-rounded me-1 mb-2" asp-page="/Tags/Detail" asp-route-id=@tag.Id>@tag.Name</a>
                            }
                        }
                    </li>         
                </ul>
            </div>
        </div>

        <div class="form-group mt-3 mb-3 d-flex justify-content-between">
            <input type="submit" value="Edit" class="btn btn-success" />
            <a class="btn btn-info btn-rounded me-1 ms-2 mb-2" onclick="startReorder();" id="reorder-button">Reorder</a>
            <a class="btn btn-info btn-rounded text-nowrap" asp-page="Index" asp-route-filter=@(Model.TagsString) asp-route-sort=@("UpdatedAtDesc")>Show similar</a>
            <button class="btn btn-danger btn-rounded" asp-page-handler="Delete" asp-route-id=@(Model.Collection.Id)>Remove</button>
        </div>
    </form>
    
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="~/js/html5sortable.js"></script>

<script type="text/javascript">
    sortable('.thumbnail-sortable', {
        placeholderClass: 'col-md-2'
    });

    sortable('.thumbnail-sortable')[0].addEventListener('sortupdate', function (e) {
        var row = document.getElementById('sortable-gallery');
        var place = 0;
        for (const child of row.children) {
            var order = child.getElementsByClassName("order-val visually-hidden");
            order[0].value = place;
            place++;
        }
    });

    function startReorder() {
        document.getElementById('order-changed').value = true;
        document.getElementById('reorder-button').style.display = "none";
        document.getElementById('sortable-gallery').style.display = "flex";
        document.getElementById('gallery').style.display = "none";
    }

    var currentOffset = -@Model.ListRequest.Count;
    var nextOffset = 0;

    window.addEventListener("scroll", function (e) {
        if ((window.innerHeight + window.scrollY + 2000) >= document.body.offsetHeight) {
            if (currentOffset == nextOffset) {
                return;
            }
            
            if (currentOffset > @Model.TotalCount) {
                nextOffset = currentOffset;
                document.getElementById('loadingSpinner').style = "display: none";
                return;
            }

            currentOffset += @Model.ListRequest.Count;
            

            var url = "/Collection/PreviewsBatch?id=" + '@Model.Collection.Id' + "&count=" + @Model.ListRequest.Count + "&offset=" + nextOffset;
            fetch(url).then(function (response) {
                return response.json();
            }).then(function (data) {
                var gallery = document.getElementById('gallery');
                var sortableGallery = document.getElementById('sortable-gallery');
                for (var i = 0; i < data.length; i++) {
                    sortCardDiv = document.createElement('div');
                    sortCardDiv.className = "picture-card shadow-1-strong col-md-2";
                    sortCardDiv.draggable = true;
                    sortCardInnerDiv = document.createElement('div');
                    sortCardInnerDiv.className = "card list-clickable p-2 pb-4 d-flex flex-column align-items-center justify-content-between thumbnail";
                    sortCardInnerDiv.style = "border-radius: 0.75rem";
                    var sortImg = document.createElement('img');
                    sortImg.className = "w-100 shadow-1-strong";
                    sortImg.style = "border-radius: 0.5rem";
                    sortImg.src = "data:image/png;base64," + data[i].content;
                    var sortInput = document.createElement('input');
                    sortInput.className = "order-val visually-hidden";
                    sortInput.type = "number";
                    sortInput.id = "Orders_" + (i + currentOffset);
                    sortInput.name = "Orders[" + (i + currentOffset) + "]";
                    sortInput.value = data[i].order;

                    var cardDiv = document.createElement('div');
                    cardDiv.className = "picture-card picture shadow-1-strong col-md-4";
                    cardDiv.id = i;
                    cardDiv.onclick = function (e) {
                        var id = e.currentTarget.id;
                        window.location = "Detail?id=" + data[id].id + "&returnUrl=/Medias/Collection?id=" + '@Model.Collection.Id';
                    }
                    var img = document.createElement('img');
                    img.className = "w-100 shadow-1-strong";
                    img.style = "border-radius: 0.5rem";
                    img.src = "data:image/png;base64," + data[i].content;

                    cardDiv.appendChild(img);
                    gallery.appendChild(cardDiv);

                    sortCardInnerDiv.appendChild(sortImg);
                    sortCardInnerDiv.appendChild(sortInput);
                    sortCardDiv.appendChild(sortCardInnerDiv);
                    sortableGallery.appendChild(sortCardDiv);
                }
                sortable('.thumbnail-sortable');
                nextOffset += @Model.ListRequest.Count;
            }).catch(function (err) {
                console.log('Fetch Error :-S', err);
            });
        }
    });

    window.scrollTo(0, 1);

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
