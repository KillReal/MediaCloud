@using MediaCloud.Data.Models
@using MediaCloud.Extensions
@model MediaCloud.WebApp._CollectionPageModel
@{
    string BuildUrlByPreview(Preview preview)
    {
        return $"/Gallery/Detail?id={preview.Id}";
    }
}


@for(var i = 0; i < Model.Previews.Count; i += 1)
{
    <div class="gallery-item-container col-sm" draggable="true">
        <a draggable="false" href="@BuildUrlByPreview(Model.Previews[i])">
            <div class="shadow-1-strong gallery-item thumbnail"
                 onclick="OnCardClick('Detail', '@(Model.Previews[i].Id)')"
                 onauxclick="OnCardInNewWindowClick('Detail', '@(Model.Previews[i].Id)')">
                <img class="w-100 shadow-1-strong gallery-image"
                     src="data:image/png;base64,@Convert.ToBase64String(Model.Previews[i].Content)"
                     alt="@Model.Previews[i].BlobName"/>
                <input class="order-val visually-hidden"
                       type="number"
                       id="Orders_@(i + Model.BatchIdOffset)"
                       name="Orders[@(i + Model.BatchIdOffset)]"
                       value="@Model.Previews[i].Order">
                @if (Model.Previews[i].BlobType.Contains("image") == false)
                {
                    <div class="filename-container">
                        <div class="filename">
                            @Model.Previews[i].BlobName
                        </div>
                    </div>
                }
                @if (Model.Previews[i].Rating > Model.AllowedNsfwContentRating)
                {
                    <div class="gallery-image-blurring">
                        @Model.Previews[i].Rating.GetDisplayName()
                    </div>
                }
            </div>
        </a>
    </div>
}